[{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jake-powell.github.io/OMESurvey/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-OME-branded-excel-output.html","id":"a-single-question-with-demographics","dir":"Articles","previous_headings":"","what":"A single question with demographics","title":"Create OME branded excel output","text":"Show results Maths Year 7:well maths across class, school sex. wanted can use survey questions demographic columns see relationship two questions.","code":"wb = OMESurvey::to_sheet_single_survey_question(data = data,                                                 question_column = 5,                                                 demographic_columns = 2:4,                                                 sheet = 'Table 1') openxlsx::saveWorkbook(wb, file = 'example1.xlsx') wb = OMESurvey::to_sheet_single_survey_question(data = data,                                                 question_column = 5,                                                 demographic_columns = 6:8,                                                 sheet = 'Table 2') openxlsx::saveWorkbook(wb, file = 'example2.xlsx')"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-OME-branded-excel-output.html","id":"summary-across-a-theme","dir":"Articles","previous_headings":"","what":"Summary across a theme","title":"Create OME branded excel output","text":"Choose theme create summary table survey responses theme. (theme must allowable values, .e. agree, disagree, etc)","code":"wb = OMESurvey::to_sheet_theme_summary(data = data, theme = 'Theme 1') openxlsx::saveWorkbook(wb, file = 'example3.xlsx')"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-OME-branded-excel-output.html","id":"an-excel-document-across-all-questions","dir":"Articles","previous_headings":"","what":"An excel document across all questions","title":"Create OME branded excel output","text":"can use functions make excel workbook multiple sheets (one question), add hyperlinking table contents sheet (using add_TOC_sheet()).","code":"question_columns = 5:15 demographic_columns = 2:4 wb <- openxlsx::createWorkbook() for(i in 1:length(question_columns)){   wb = to_sheet_single_survey_question(data = data,                                        question_column = question_columns[i],                                        demographic_columns = demographic_columns,                                        sheet = paste0('Table ',i),                                        wb = wb   ) }  # Add TOC sheet (with hyperlinks to individual tables) questions = names(data)[question_columns] |>   stringr::str_replace_all('__',': ') |>   stringr::str_replace_all('_',' ') |>   stringr::str_replace_all('XX','?')  wb = add_TOC_sheet(wb, link_text = questions) openxlsx::saveWorkbook(wb, file = 'all_questions_with_TOC.xlsx', overwrite = T)"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"number-of-responses-across-questions-in-a-theme","dir":"Articles","previous_headings":"","what":"Number of responses across questions in a theme","title":"Create survey figures","text":"case can use plot_theme() create horizontal bar chart. Depending “Kind” argument can create ggplot, plotly figure formatted data frame.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"section","dir":"Articles","previous_headings":"","what":"Create survey figures","title":"Create survey figures","text":"ggplot plotly data.frame","code":"OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot') OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'plotly') df = OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'data.frame') df |> DT::datatable(extensions = 'Buttons',                   rownames = F,                   options = list(scrollY = 300,                                  dom = 'Bt',                                  buttons = c('copy', 'csv', 'excel', 'pdf'),                                  paging=FALSE,                                  ordering=F))"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"section-1","dir":"Articles","previous_headings":"","what":"Create survey figures","title":"Create survey figures","text":"Note use default survey_values = OMESurvey::survey_values used find expected values survey questions order show answers legend. custom survey values can change survey_values. function uses colours OMESurvey::get_OME_colours(). plots either ggplot plotly object returned, therefore + |> can used update plot (e.g layout/colours, etc). can create plot data frame output. example want swap bar order keep colourscheme.  Note warning given answers questions align survey values. unexpected answers set NA (ggplot).","code":"# Use custom survey_values with the order of the values reversed p = OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot',                       survey_values = list(agree = c(\"Agree a lot\", \"Agree a little\", \"Neither\",           \"Disagree a little\", \"Disagree a lot\") |> rev()))  # Get OME colours colo = get_OME_colours(n = 5, type = 'contrast')  # Swap to the original colour order p + ggplot2::scale_fill_manual(values = colo |> rev(), guide = ggplot2::guide_legend(reverse = TRUE))  #> Scale for fill is already present. #> Adding another scale for fill, which will replace the existing scale. data_issue = data data_issue$Theme_1__Question_1[1] = 'Ohh Dear...'  # Use custom survey_values with the order of the values reversed OMESurvey::plot_theme(data_issue, theme = 'Theme_1', kind = 'ggplot') #> Warning in OMESurvey::plot_theme(data_issue, theme = \"Theme_1\", kind = #> \"ggplot\"): The expected answers are: \"Agree a lot\", \"Agree a little\", #> \"Neither\", \"Disagree a little\", \"Disagree a lot\" which does not include the #> following found in the data: \"Ohh Dear...\""},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"number-of-responses-across-questions-in-a-theme-with-a-demographic","dir":"Articles","previous_headings":"","what":"Number of responses across questions in a theme with a demographic","title":"Create survey figures","text":"Need add demographic column extract school bar code.","code":"school = data$Barcode_ID |> as.character() |>  substr(3, 5) data$school = school school_column = ncol(data)"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"section-2","dir":"Articles","previous_headings":"","what":"Create survey figures","title":"Create survey figures","text":"ggplot plotly data.frame","code":"OMESurvey::plot_theme_by_demographic(data, theme = 'Theme_1', demographic_column = school_column,  kind = 'ggplot') OMESurvey::plot_theme_by_demographic(data, theme = 'Theme_1', demographic_column = school_column,  kind = 'plotly') # Get school information df = OMESurvey::plot_theme_by_demographic(data, theme = 'Theme_1', demographic_column = school_column,  kind = 'data.frame')  df |> DT::datatable(extensions = 'Buttons',                   rownames = F,                   options = list(scrollY = 300,                                  dom = 'Bt',                                  buttons = c('copy', 'csv', 'excel', 'pdf'),                                  paging=FALSE,                                  ordering=F))"},{"path":[]},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"adding-ome-logo-to-ggplot","dir":"Articles","previous_headings":"","what":"Adding OME logo to ggplot","title":"Create survey figures","text":"can also add OME logo ggplot objects using add_logo(). Note however use gridExtra::grid.arrange() function add logo margin causes object longer ggplot object. Thus, use ‘+’ change plot adding logo.","code":"# Add logo. OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot') |> OMESurvey::add_logo() # Add logo, speciify position. OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot') |> OMESurvey::add_logo(position = 'top right') # Add logo, speciify position and sizing arguement. OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot') |> OMESurvey::add_logo(position = 'top left',logo_sizing = c(0.3, 0.5))"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"formatted-bar-charts-from-data-column","dir":"Articles","previous_headings":"","what":"Formatted bar charts from data column","title":"Create survey figures","text":"can use plot_bar() create bar charts single column within survey data.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"section-4","dir":"Articles","previous_headings":"","what":"Create survey figures","title":"Create survey figures","text":"ggplot plotly data.frame","code":"OMESurvey::plot_bar(data, column = 5, kind = 'ggplot') OMESurvey::plot_bar(data, column = 5, kind = 'plotly') df = OMESurvey::plot_bar(data, column = 5, kind = 'data.frame') df |> DT::datatable(extensions = 'Buttons',                   rownames = F,                   options = list(scrollY = 300,                                  dom = 'Bt',                                  buttons = c('copy', 'csv', 'excel', 'pdf'),                                  paging=FALSE,                                  ordering=F))"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Create-survey-figures.html","id":"section-5","dir":"Articles","previous_headings":"","what":"Create survey figures","title":"Create survey figures","text":"Note can include NA bar charts using passing arguments table() via .... Moreover, ggplot outputs can include numbers plot y setting showValue = TRUE.","code":"OMESurvey::plot_bar(data, column = 5, kind = 'ggplot', showValue = TRUE, useNA = 'always') #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale."},{"path":"https://jake-powell.github.io/OMESurvey/articles/Preparation-and-initial-survey-analysis.html","id":"data-cleaning","dir":"Articles","previous_headings":"","what":"Data Cleaning","title":"Preparation and initial survey analysis","text":"first aim clean data data ready analysed modifications required. Note first clean need sanity checks case issues data. initial part cleaning involve: Adding theme / group information column names. using tools herein column name questions format XX__YY XX theme/group YY question (.e use ’__’ double underscore represent split group/theme question). Convert ‘N-’ NA. Get school ID bar code. Create combined school class ID (case multiple schools class ID). show data 5 participants (transposed table easier see). first step cleaning see addition school school_class combined columns new column names NAs added. first step cleaning can now run checks errors dataset. check issues can use check_survey() checks barcode issues, unexpected values question columns questions multiple answers (.e. value “99”). function returns list informing issues type listed . see errors occur casing issues (capital N never), since isn’t case specific survey can fix using stringr::str_to_sentence() cleaning section (already just commented show issue). issue ‘Neither’ used instead ‘Half time’ case specific can fixed individual report. want check survey images records “99s” can filter SharePoint search barcodes using following text","code":"# Clean 1.   # A) Adding theme/group to column names. group = c('Theme 1' |> rep(6),           'Theme 2'|> rep(7),            'Theme 3'|> rep(12),            'Theme 4'|> rep(4),           'Theme 5'|> rep(12),            'Theme 6'|> rep(7),           'Theme 7'|> rep(6),            'Theme 8'|> rep(7))               names(data)[6:ncol(data)] = paste0(group, '__', names(data)[6:ncol(data)])  names(data) = names(data) |> stringr::str_replace_all(pattern = ' ', replacement = '_')  # B) NAs for(i in 1:ncol(data)){   data[,i][data[,i] == 'N-A'] = NA   # data[,i] = data[,i] |> stringr::str_to_sentence() # commented out for example. }  # C + D) School ID and combine school and class information. school = data$Barcode_ID |> as.character() |>  substr(3, 5) school_and_class = paste0(school,'__', data$`Group_/_class`)   # Combine into a cleaned dataset.  data_clean = data.frame(data[,1:4], school, school_and_class, data[,5:ncol(data)]) check = OMESurvey::check_survey(data) check #> $barcode #> $barcode$isIssue #> [1] FALSE #>  #> $barcode$issues #> NULL #>  #>  #> $question_text #> $question_text$isIssue #> [1] TRUE #>  #> $question_text$issues #>                question Unexpected.value Count  Indices #> 5  Theme_3__Question_21          Neither     2 187, 352 #> 7  Theme_3__Question_22     Almost Never     1        3 #> 11 Theme_5__Question_41   DIsagree a lot     1      252 #>                                                                          expected #> 5  Almost always, Most of the time, Half the time, Some of the time, Almost never #> 7  Almost always, Most of the time, Half the time, Some of the time, Almost never #> 11        Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #>  #>  #> $multiple_answers #> $multiple_answers$isIssue #> [1] TRUE #>  #> $multiple_answers$issues #>                question Unexpected.value Count       Indices #> 1   Theme_1__Question_3               99     1           344 #> 2   Theme_1__Question_4               99     3 240, 251, 402 #> 3   Theme_2__Question_9               99     2      241, 260 #> 4  Theme_3__Question_20               99     1            56 #> 6  Theme_3__Question_21               99     1           387 #> 8  Theme_5__Question_32               99     2      272, 480 #> 9  Theme_5__Question_35               99     2      154, 177 #> 10 Theme_5__Question_37               99     1            21 #> 12 Theme_6__Question_44               99     2      278, 317 #> 13 Theme_7__Question_52               99     3  26, 128, 335 #> 14 Theme_8__Question_56               99     1           369 #>                                                                          expected #> 1         Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 2         Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 3         Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 4  Almost always, Most of the time, Half the time, Some of the time, Almost never #> 6  Almost always, Most of the time, Half the time, Some of the time, Almost never #> 8         Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 9         Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 10        Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 12        Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 13        Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #> 14        Agree a lot, Agree a little, Neither, Disagree a little, Disagree a lot #>  #> $multiple_answers$barcodes #>  [1] 1200700304 1200700360 1200700413 1200700392 1200700402 1200700410 #>  [7] 1200800516 1200700389 1200700423 1200900701 1200800572 1200800585 #> [13] 1200800456 1201000757 1201000896 1200800469 1200800497 1201000908 #> [19] 1200700320 # Run extra cleaning with issues found. for(i in 1:ncol(data)){   data_clean[,i] = data_clean[,i] |> stringr::str_to_sentence()  }  # Fix neither to Half the time. data_clean$Theme_3__Question_21[data_clean$Theme_3__Question_21 == 'Neither'] = 'Half the time' paste0(check$multiple_answers$barcodes, collapse = \" OR \") #> [1] \"1200700304 OR 1200700360 OR 1200700413 OR 1200700392 OR 1200700402 OR 1200700410 OR 1200800516 OR 1200700389 OR 1200700423 OR 1200900701 OR 1200800572 OR 1200800585 OR 1200800456 OR 1201000757 OR 1201000896 OR 1200800469 OR 1200800497 OR 1201000908 OR 1200700320\""},{"path":"https://jake-powell.github.io/OMESurvey/articles/Preparation-and-initial-survey-analysis.html","id":"checking-for-issues-in-the-id","dir":"Articles","previous_headings":"Data Cleaning","what":"Checking for issues in the ID","title":"Preparation and initial survey analysis","text":"precaution may want check IDs survey dataset aligns information already held ID name combinations. useful track issues ID, changes names check children used ‘empty form’ rather survey meant (missing misplaced example). Within OMESurvey function check_IDs() performs ID checks. example shown .","code":"# Use a large extract of the data as the 'true' values true_df = data[1:100,]  # Small subset for our survey results. data_ex  = data[1:10,] #Change some names and IDs. data_ex$First_Name[3] = 'Luke' data_ex$Barcode_ID[7] = data_ex$Barcode_ID[7] |> stringr::str_extract(pattern = '[0-9]{8}')   # Check the IDs using  check_IDs(data = data_ex, true_df = true_df) #> $length_issue #> [1] \"12008005\" #>  #> $inconsistent_issue #>     Data: ID Data: First Name Data: Surname Potential:  ID #> 1 1200800442             Luke        Powell           <NA> #> 2   12008005             Jake        Powell     1200800551 #>   Potential: First Name Potential: Surname #> 1                  Jake             Powell #> 2                  <NA>               <NA>"},{"path":"https://jake-powell.github.io/OMESurvey/articles/Preparation-and-initial-survey-analysis.html","id":"missingness-report","dir":"Articles","previous_headings":"","what":"Missingness report","title":"Preparation and initial survey analysis","text":"Now cleaned data can create missingness report explore empty surveys, questions often missing, etc. Within OMESurvey pre-written markdown report takes survey data input analyses missingness. Therefore need run function create_missingness_report() create report whichever survey data analysing. Note default creates .html report charts interactive (.e hover enabled, plus potential features). allows informative charts however comes cost able edit document. Therefore using input report_kind = 'static' render report except output .docx allowing text edited/added expense interactive plots (replaced static screengrabs).","code":"# Create the missingness report. OMESurvey::create_missingness_report(survey_data = data_clean,                                       survey_name = 'example survey',                                      output_dir = getwd()                                      )"},{"path":"https://jake-powell.github.io/OMESurvey/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jake Powell. Author, maintainer.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Powell J (2025). OMESurvey: Tools analysing survey data Observatory Mathematical Education. R package version 0.0.0.9000, https://jake-powell.github.io/OMESurvey/.","code":"@Manual{,   title = {OMESurvey: Tools for analysing survey data for the Observatory of Mathematical Education},   author = {Jake Powell},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://jake-powell.github.io/OMESurvey/}, }"},{"path":"https://jake-powell.github.io/OMESurvey/index.html","id":"omesurvey","dir":"","previous_headings":"","what":"Tools for analysing survey data for the Observatory of Mathematical Education","title":"Tools for analysing survey data for the Observatory of Mathematical Education","text":"📦 OMESurvey package contains tools analysing survey data OME, particular (now) converting raw survey data publishable excel workbooks.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for analysing survey data for the Observatory of Mathematical Education","text":"can install development version OMESurvey GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Jake-Powell/OMESurvey\")"},{"path":"https://jake-powell.github.io/OMESurvey/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for analysing survey data for the Observatory of Mathematical Education","text":"Creating survey results given theme","code":"library(OMESurvey) data = OMESurvey::survey_example  OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot')"},{"path":"https://jake-powell.github.io/OMESurvey/reference/OMESurvey-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OMESurvey: Tools for analysing survey data for the Observatory of Mathematical Education — OMESurvey-package","title":"OMESurvey: Tools for analysing survey data for the Observatory of Mathematical Education — OMESurvey-package","text":"Tools analysing survey data.","code":""},{"path":[]},{"path":"https://jake-powell.github.io/OMESurvey/reference/OMESurvey-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OMESurvey: Tools for analysing survey data for the Observatory of Mathematical Education — OMESurvey-package","text":"Maintainer: Jake Powell Jake.Powell2@nottingham.ac.uk (ORCID)","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_TOC_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add table of contents to an workbook — add_TOC_sheet","title":"Add table of contents to an workbook — add_TOC_sheet","text":"Add table contents workbook","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_TOC_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add table of contents to an workbook — add_TOC_sheet","text":"","code":"add_TOC_sheet(wb, link_text = NULL, return_pos = c(1, 1))"},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_TOC_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add table of contents to an workbook — add_TOC_sheet","text":"wb workbook append sheet (requires append_to = TRUE) link_text character vector text displayed linked text TOC sheet. Must length number sheets wb. return_pos integer pair, row column index place return contents link sheets wb.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_TOC_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add table of contents to an workbook — add_TOC_sheet","text":"openxlsx workbook TOC added.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add OME logo to a ggplot object — add_logo","title":"Add OME logo to a ggplot object — add_logo","text":"Add OME logo ggplot object","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add OME logo to a ggplot object — add_logo","text":"","code":"add_logo(p, type = \"\", position = \"bottom right\", logo_sizing = c(0.11, 0.2))"},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add OME logo to a ggplot object — add_logo","text":"p ggplot object. type Specifies type logo. Either 'bw' 'standard'. position Specifies logo position. Either 'top left', 'top right', 'bottom left' 'bottom right'. logo_sizing numeric vector length 2. first element defines amount vertical spacing logo uses (default 11% figure height). second element defines logo width (min 0, max 1 default 0.2)","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add OME logo to a ggplot object — add_logo","text":"original plot logo added.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add OME logo to a ggplot object — add_logo","text":"function currently works ggplot objects always adds logo outside original plot (extended margin). Note use '+' add ggplot object, function returns non-ggplot object (use gridExtra::grid.arrange() add logo). always last step creating plot. Play around logo sizing parameter find desired logo size.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/add_logo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add OME logo to a ggplot object — add_logo","text":"","code":"if (FALSE) { # Load in some example survey data and create a plot. data = OMESurvey::survey_example p = OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot')  # Add logo to plot either top right or bottom right. p |> OMESurvey::add_logo(position = 'top right') p |> OMESurvey::add_logo(position = 'bottom right', logo_sizing = c(0.21, 0.3))  }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/check_question_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for issues in the survey data — check_question_columns","title":"Check for issues in the survey data — check_question_columns","text":"Functions check inital survey data issues unexpected answers questions questions multiple answers.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/check_question_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for issues in the survey data — check_question_columns","text":"","code":"check_question_columns(   data,   question_columns,   survey_values = OMESurvey::survey_values,   format = \"table\",   exclude_99 = TRUE )  check_survey(data, ID_column = \"Barcode_ID\", ...)  check_IDs(   data,   ID_column = \"Barcode_ID\",   first_name_column = \"First_Name\",   surname_column = \"Surname\",   true_df = NA )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/check_question_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for issues in the survey data — check_question_columns","text":"data survey data, formatted row individual column names describe demographics survey questions (format YY__ZZ, XX theme YY question, ' ' replaced '_' '?' 'XX'.) question_columns index question columns. survey_values list possible survey question answers default takes values OMESurvey::survey_values. format Either 'list' result question another element list 'table' concatenates results single table. exclude_99 Logical (TRUE/FALSE) whether exclude '99' non-expected values. ID_column name ID column. Default \"Barcode_ID\". ... parameters downstream functions. first_name_column name \"First Name' column. Default \"First_Name\". surname_column name \"Surname' column. Default \"Surname\". true_df data frame including columns ID_column, first_name_column, surname_column contain correct ID, first name surname combinations.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/check_question_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for issues in the survey data — check_question_columns","text":"check_survey() checks survey data issues barcodes, unexpected values questions multiple answers (.e \"99\"). Uses check_question_columns() genereate unexpected values location \"99\"s. check_question_columns() checks given columns unexpected values expected values auto-detected comparison survey_values. See Preparation initial survey analysis vignette example.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_initial_analysis_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial analysis report — create_initial_analysis_report","title":"Initial analysis report — create_initial_analysis_report","text":"Create report initial finding survey.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_initial_analysis_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial analysis report — create_initial_analysis_report","text":"","code":"create_initial_analysis_report(   survey_data,   survey_name,   participant_ID = \"Barcode_ID\",   report_kind = \"interactive\",   demographic_columns = NULL,   output_dir = NULL,   output_file = NULL,   reference_docx = NULL )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_initial_analysis_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial analysis report — create_initial_analysis_report","text":"survey_data cleaned survey data survey_name name survey participant_ID column name column survey_data corresponding participant ID. report_kind Either 'interactive'(.html) 'static'(.docx) report type demographic_columns column names (indices) columns survey_data corresponding demographic columns. used compare missingness across demographics. output_dir path output directory output_file filename output. NULL use paste0(survey_name, '_initial_analysis_report', \"extension\") filename. reference_docx Path .docx file whose style (design) report copies.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_initial_analysis_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial analysis report — create_initial_analysis_report","text":"html/word report","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Missingness report — create_missingness_report","title":"Missingness report — create_missingness_report","text":"Create report missingness entries survey.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missingness report — create_missingness_report","text":"","code":"create_missingness_report(   survey_data,   survey_name,   participant_ID = \"Barcode_ID\",   report_kind = \"interactive\",   demographic_columns = NULL,   output_dir = NULL,   output_file = NULL,   reference_docx = NULL )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missingness report — create_missingness_report","text":"survey_data cleaned survey data survey_name name survey participant_ID column name column survey_data corresponding participant ID. report_kind Either 'interactive'(.html) 'static'(.docx) demographic_columns column names (indices) columns survey_data corresponding demographic columns. used compare missingness across demographics. output_dir path output directory output_file filename output. NULL use paste0(survey_name, '_missingness_report', \"extension\") filename. reference_docx Path .docx file whose style (design) report copies","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missingness report — create_missingness_report","text":"html/word report","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missingness report — create_missingness_report","text":"Note currently report_kind = 'static', tables plots screenshots interactive plots (using webshot package). Moreover, chromote version 0.4.0 needed avoid rendering issues.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/create_missingness_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missingness report — create_missingness_report","text":"","code":"if (FALSE) { data = OMESurvey::survey_example  # Run with no missingness. OMESurvey::create_missingness_report(survey_data = data,                                      survey_name = 'example data',                                      participant_ID = \"Barcode_ID\",                                      report_kind = \"interactive\",                                      demographic_columns = NULL,                                      output_dir = NULL,                                      output_file = NULL,                                      reference_docx = NULL)  # Convert 'N-A' to NA, to imply missing for(i in 1:ncol(data)){   data[,i][data[,i] == 'N-A'] = NA }  # Run with missingness. OMESurvey::create_missingness_report(survey_data = data,                                      survey_name = 'example data',                                      report_kind = \"interactive\") # Knit to word. OMESurvey::create_missingness_report(survey_data = data,                                      survey_name = 'example data',                                      report_kind = \"static\",                                      output_file = 'example_word.docx')  # Knit to word with styling. (using example template from within the OMESurvey package) OMESurvey::create_missingness_report(survey_data = data,                                      survey_name = 'example data',                                      participant_ID = \"Barcode_ID\",                                      report_kind = \"static\",                                      reference_docx = paste0(                                      system.file(package = \"OMESurvey\"), \"/template.docx\"                                      ),                                      output_file = 'example_word_styled.docx') }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"get colours for the OME — get_OME_colours","title":"get colours for the OME — get_OME_colours","text":"get colours OME","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get colours for the OME — get_OME_colours","text":"","code":"get_OME_colours(n, type = \"contrast\")"},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get colours for the OME — get_OME_colours","text":"n number colours. type either \"contrast\", \"complementary\" \"distinct\".","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get colours for the OME — get_OME_colours","text":"vector \"n\" colours.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get colours for the OME — get_OME_colours","text":"Base colours palettes: OME complementary colours = \"#10263B\" (Dark Navy/Nottingham Blue), \"#009BC1\" (Blue/Malaysia Sky Blue) \"#37B4B0\"(Turquoise/Trent Turquoise). OME contrast colours = \"#009BC1\" (Blue/Malaysia Sky Blue), \"#10263B\" (Dark Navy/Nottingham Blue) '#D7336C' (Pink/Pioneering Pink). OME distinct colours = \"#009BC1\"(Blue/Malaysia Sky Blue),'#DEB406' (Gold/Rebel's Gold), '#D7336C' (Pink/Pioneering Pink) '#10263B' (Dark Navy/Nottingham Blue). 'contrast' 'distinct' specific colour orderings chosen n <= 9, whereas 'complementary' specific colours selected n <= 3. n larger interpolate palette using grDevices::colorRampPalette().","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_OME_colours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get colours for the OME — get_OME_colours","text":"","code":"if (FALSE) { get_OME_colours(3) |> scales::show_col() get_OME_colours(3, type = 'complementary') |> scales::show_col() get_OME_colours(9, type = 'distinct') |> scales::show_col() }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_and_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract theme and questions from column names — get_theme_and_questions","title":"Extract theme and questions from column names — get_theme_and_questions","text":"Extract theme questions column names","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_and_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract theme and questions from column names — get_theme_and_questions","text":"","code":"get_theme_and_questions(theme_and_questions)"},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_and_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract theme and questions from column names — get_theme_and_questions","text":"theme_and_questions column names single theme respective questions.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_and_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract theme and questions from column names — get_theme_and_questions","text":"list length 2, $theme string theme name $questions vector strings questions","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve theme columns — get_theme_columns","title":"Retrieve theme columns — get_theme_columns","text":"Retrieve theme columns","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve theme columns — get_theme_columns","text":"","code":"get_theme_columns(data, theme)"},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve theme columns — get_theme_columns","text":"data survey data theme string containing theme name (without \"_\" spacing).","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/get_theme_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve theme columns — get_theme_columns","text":"column indices questions relating theme","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot OME bar plot — plot_bar","title":"Plot OME bar plot — plot_bar","text":"Plot OME bar plot","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot OME bar plot — plot_bar","text":"","code":"plot_bar(   data,   column,   type = \"horizontal\",   kind = \"ggplot\",   rm99 = TRUE,   showValue = FALSE,   ... )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot OME bar plot — plot_bar","text":"data survey data column column index name select data. type Either 'vertical' 'horizontal'. Default 'horizontal'. kind kind object want returned. Allowable values \"ggplot\", \"plotly\" \"data.frame\". rm99 Flag (TRUE/FALSE) whether want set '99' values NA suppress multiple values option. Default TRUE. showValue Flag (TRUE/FALSE) whether display values plot. ... parameters table(). .e whether want include NA using useNA = 'always' 'ifany'.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot OME bar plot — plot_bar","text":"either data.frame, ggplot object plotly object.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot OME bar plot — plot_bar","text":"","code":"if (FALSE) { # Load in some example survey data and create a plot. data = OMESurvey::survey_example  # Create bar plot for column 5. OMESurvey::plot_bar(data, column = 5, kind = 'ggplot')  }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"plot survey theme result — plot_theme","title":"plot survey theme result — plot_theme","text":"plot survey theme result","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot survey theme result — plot_theme","text":"","code":"plot_theme(   data,   theme = NA,   theme_columns = NA,   kind = \"ggplot\",   rm99 = TRUE,   survey_values = OMESurvey::survey_values )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot survey theme result — plot_theme","text":"data survey data theme string containing theme name (without \"_\" spacing). theme_columns column index relating theme. input overwritten columns found parameter 'theme' inputte. kind kind object want returned. Allowable values \"ggplot\", \"plotly\" \"data.frame\". rm99 Flag (TRUE/FALSE) whether want set '99' values NA suppress multiple values option. Default TRUE. survey_values list survey answer types allowble values. Default OMESurvey::survey_values.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot survey theme result — plot_theme","text":"either plotly object, ggplot object data frame depending kind.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot survey theme result — plot_theme","text":"See vignette(\"Create-survey-figures\", package = \"OMESurvey\") article examples.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot survey theme result — plot_theme","text":"","code":"if (FALSE) { # Load in some example survey data. data = OMESurvey::survey_example  # Create the theme plot. p = OMESurvey::plot_theme(data, theme = 'Theme_1', kind = 'ggplot')  }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survey theme result by demographic — plot_theme_by_demographic","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"Plot survey theme result demographic","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"","code":"plot_theme_by_demographic(   data,   theme = NA,   theme_columns = NA,   demographic_column,   agree_values = c(\"Agree a little\", \"Agree a lot\"),   kind = \"ggplot\",   rm99 = TRUE )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"data survey data theme string containing theme name (without \"_\" spacing). theme_columns column index relating theme. input overwritten columns found parameter 'theme' inputte. demographic_column index demographic column. agree_values answers correspond agree. kind kind object want returned. Allowable values \"ggplot\", \"plotly\" \"data.frame\". rm99 Flag (TRUE/FALSE) whether want set '99' values NA suppress multiple values option. Default TRUE.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"either plotly object, ggplot object data frame depending kind.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"See Create survey figures article examples.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/plot_theme_by_demographic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot survey theme result by demographic — plot_theme_by_demographic","text":"","code":"if (FALSE) { # Load in some example survey data. data = OMESurvey::survey_example  # Add a school column using the barcode. school = data$Barcode_ID |> as.character() |>  substr(3, 5) data$school = school school_column = ncol(data)  # Create the theme by demographic plot. OMESurvey::plot_theme_by_demographic(data, theme = 'Theme_1', demographic_column = school_column, kind = 'ggplot')  }"},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Fake survey data — survey_example","title":"Fake survey data — survey_example","text":"Example survey data 484 students answering 61 questions across 8 themes.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fake survey data — survey_example","text":"","code":"survey_example"},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fake survey data — survey_example","text":"object class data.frame 484 rows 66 columns.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fake survey data — survey_example","text":"#' data frame 484 rows 65 columns:","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey values — survey_values","title":"Survey values — survey_values","text":"list vectors vector contains strings representing survey answers single question. includes: 'Agree lot', 'Agree little', 'Neither', 'Disagree little', 'Disagree lot' 'Almost always','time','Half time','time','Almost never' 'Often', 'Sometimes', 'Never' 'lot', 'Sometimes', 'much', 'answer' 'Good', 'Okay', 'Bad', 'answer' 'Like', 'Okay', \"like\", 'answer' '1','2'","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey values — survey_values","text":"","code":"survey_values"},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey values — survey_values","text":"object class list length 7.","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/survey_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey values — survey_values","text":"#' list length 3","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_single_survey_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add response to single survey question — to_sheet_single_survey_question","title":"Add response to single survey question — to_sheet_single_survey_question","text":"Add response single survey question","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_single_survey_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add response to single survey question — to_sheet_single_survey_question","text":"","code":"to_sheet_single_survey_question(   data,   question_column,   demographic_columns,   append_to = NULL,   wb = NULL,   sheet = \"Data\" )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_single_survey_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add response to single survey question — to_sheet_single_survey_question","text":"data survey data, formatted row individual column names describe demographics survey questions (format YY__ZZ, XX theme YY question, ' ' replaced '_' '?' 'XX'.) question_column column index question within data demographic_columns column indices demographics used filter data (e.g. sex, etc) append_to Flag (TRUE/FALSE) whether summary sheet appended previous workbook wb workbook append sheet (requires append_to = TRUE) sheet sheet name","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_single_survey_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add response to single survey question — to_sheet_single_survey_question","text":"returns openxlsx workbook new sheet added","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_theme_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Add theme summary sheet — to_sheet_theme_summary","title":"Add theme summary sheet — to_sheet_theme_summary","text":"Add theme summary sheet","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_theme_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add theme summary sheet — to_sheet_theme_summary","text":"","code":"to_sheet_theme_summary(   data,   theme = NULL,   theme_columns = NULL,   append_to = NULL,   wb = NULL,   sheet = \"Data\",   order = FALSE )"},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_theme_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add theme summary sheet — to_sheet_theme_summary","text":"data survey data, formatted row individual column names describe demographics survey questions (format YY__ZZ, XX theme YY question, ' ' replaced '_' '?' 'XX'.) theme string containing theme name. theme_columns Indices columns data theme append_to Flag (TRUE/FALSE) whether summary sheet appended previous workbook wb workbook append sheet (requires append_to = TRUE) sheet sheet name order used","code":""},{"path":"https://jake-powell.github.io/OMESurvey/reference/to_sheet_theme_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add theme summary sheet — to_sheet_theme_summary","text":"workbook theme summary added","code":""}]
